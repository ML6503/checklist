{
  "taskName": "Node.js 2022Q4 #PostgreSQL & ORM",
  "github": "https://github.com/AlreadyBored/nodejs-assignments/blob/main/assignments/rest-service/assignment.md",
  "criteria": [
    {
      "type": "title",
      "title": "Dear Evaluator,\nYou are to check only requirements listed in the assignment.\nIf any issue is not covered by assignment requirements, then neither should you check it nore evaluate.\n"
    },
    {
      "type": "title",
      "title": "All doubts are interpreted in favor of the student.\nIf you have doubts, whether or not to deduct points, do not deduct.\n"
    },
    {
      "type": "title",
      "title": "Basic Scope"
    },   
    {
      "type": "subtask",
      "text": "Users data is stored in PostgreSQL database and typeorm / prisma interacts with the database to manipulate data.",     
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Artists data is stored in PostgreSQL database and typeorm / prisma interacts with the database to manipulate data.",     
      "max": 20 
    },
    {
      "type": "subtask",
      "text": "Albums data is stored in PostgreSQL database and typeorm / prisma interacts with the database to manipulate data.",     
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Tracks data is stored in PostgreSQL database and typeorm / prisma interacts with the database to manipulate data.",     
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Favorites data is stored in PostgreSQL database and typeorm / prisma interacts with the database to manipulate data.",     
      "max": 20
    },   
    {
      "type": "title",
      "title": "Advanced Scope"
    },   
    {
      "type": "subtask",
      "text": "Migrations are used to create database entities",
      "max": 30     
    },
    {
      "type": "subtask",
      "text": "Variables used for connection to database to be stored in .env",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "typeorm decorators or prisma relations create relations between entities",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Local PostgreSQL installation is not required for task check, connection is implemented to database stored in docker container (on the basis of the previous task)",
      "max": 30     
    },  
    {
      "type": "title",
      "title": "Forfeits"      
    },
       
    {
      "type": "penalty",
      "text": " -10 for each failing test - calculate and minus from total if more than 1.(this forfeit applied once if coincides with same forfeit in different assignments in case there are multiple assignments in task)",
      "max": -10     
    },   
    {
      "type": "penalty",
      "text": "-10 points for each error either on npm run lint on the basis of the local config or for compilation errors on the basis of the local tsconfig (errors not warnings). Calculate and minus from total if more than 1 error.",
      "max": -10     
    }, 
    {
      "type": "penalty",
      "text": "Commits after deadline (except commits that affect only 'Readme.md', '.gitignore', etc.). Penalty is -30% of total task score",
      "max": -54
    },
    {
      "type": "penalty",
      "text": "No separate development branch",
      "max": -20
    },
    {
      "type": "penalty",
      "text": "No Pull Request",
      "max": -20
    },
    {
      "type": "penalty",
      "text": "Pull Request description is incorrect",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "Less than 3 commits in the development branch, not including commits that make changes only to Readme.md or similar files (tsconfig.json, .gitignore, .prettierrc.json, etc.)",
      "max": -20
    } 
    
  ]
}
